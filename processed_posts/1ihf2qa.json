{
  "id": "1ihf2qa",
  "title": "Hosting help(web)",
  "content": "imagine i have created a frontend and backend and backend have apis(free version) so how do i host it into the web so i could provide demo and later to improve it.Also i would prefer the hosting to be free  \nPS:i have searched yt for this but i could only host th efrontend part not the backend",
  "metadata": {
    "author": "Radiant-Contract-460",
    "url": "https://www.reddit.com/r/PESU/comments/1ihf2qa/hosting_helpweb/",
    "permalink": "/r/PESU/comments/1ihf2qa/hosting_helpweb/",
    "score": 6,
    "created_utc": 1738666462,
    "flair": "Study Help :table:",
    "nsfw": false,
    "type": "submission"
  },
  "comments": [
    {
      "id": "maws2pw",
      "body": "I'd say create an Amazon Web services account, you can deploy it on EC2, the free tier is 1 year with 750 hrs per month (cross check this once).\n\nYou can connect to your EC2 from cmd using a public IP that you get after creating your instance.\n\nFurther upload the project from your local device to remote EC2.\n\nInstall all the dependencies on the remote EC2.\n\nOnce you are done copying the files from your local device to EC2 instance, run the server file.\n\nYou can view your website on http://<public_ip>:<port no of server>.\n\nYou can check youtube videos which demonstrate how to deploy your code onto a EC2 instance.\n\n\n\nVercel is best if it's a static (serverless code)"
    },
    {
      "id": "mawsxsu",
      "body": "Also could you briefly describe your project, tech stack stuff"
    },
    {
      "id": "maxflbk",
      "body": "Depending on how heavy your app is, you can try using some of the free tier platforms which offer free hosting on limited compute and rate limited access. \n\nThe pesu-auth APIs that were developed to log into the discord server are hosted on render. If you dockerise your app, it's pretty straightforward to one-click deploy."
    },
    {
      "id": "maxkge9",
      "body": "Now in the backend it's just gemini api with a simple task . Also am I supposed to host frontend and backend separately??"
    },
    {
      "id": "mayfttt",
      "body": "If the backend is done on flask.\n\n    app .route(\"/api/gemini\", methods=[\"POST\"])\n\nu/ : is at sign, idk why I cant write it here.\n\nmake a POST call like this, access it thru postman.\n\nFor verification, make a GET call with hard coded prompt for ur usecase\n\n    app .route(\"/api/gemini\", methods=[\"GET\"])                    def fact_check_route():                                                                                  content = \"Ur prompt.\"                                                                         result = fact_check(content)                                                                 return jsonify(result), 200 # Watch out for indentation\n\nMake a test case with GET method just for verification:\n\n    app .route(\"/api/verify\", methods=[\"GET\"])                        def verify():                                                return jsonify({\"status\": \"OK\", \"message\": \"Backend is running\"}), 200\n\nDo these to avoid some error (I dont remember right now)\n\n    set FLASK_APP=app.py                                           set Flask_ENV=development                                     flask run --reload       \n\nFor frontend, I assume u r using js\n\nThis snippet will fetch the api calls (in json format) from backend server\n\n    const API_URL = window.location.hostname === \"localhost\"        ? \"http://127.0.0.1:5000/api/gemini\"                            : \"https://name-whatever.vercel.app/api/gemini\";               try {                                                        const response = await fetch(API_URL,                           {                                                           method: \"POST\",                                                headers: {                                                     \"Content-Type\": \"application/json\"                               },                                                           body: JSON.stringify({ content: content })                       });                                                           const result = await response.json();\n\nhere **content** is whatever u r fetching from frontend (user input)."
    },
    {
      "id": "mayv6b4",
      "body": "You can host it on the same server."
    },
    {
      "id": "mb45wdi",
      "body": "Hey, but it can be also hosted separately right? In my case I have a POST calling with 3 key:value pairs from (hostname)/api/gemini endpoint. \n\nIf frontend is configured to fetch from there, it should work?"
    }
  ]
}